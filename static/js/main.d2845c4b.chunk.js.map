{"version":3,"sources":["assets/fonts/URWDIN/URWDIN-Light.otf","state/uiState/actions.ts","state/uiState/reducers.ts","state/uiState/index.ts","state/post/actions.ts","assets/PostData.ts","state/post/reducers.ts","state/post/operations.ts","state/post/index.ts","state/store.ts","view/animations/index.ts","view/components/Menu.tsx","view/components/Header.tsx","view/components/Three.tsx","view/pages/Home.tsx","view/components/PostThumbnail.tsx","view/containers/PostThumbnail.ts","view/components/PostList.tsx","view/containers/PostList.ts","view/pages/Gallery.tsx","view/components/Tag.tsx","view/components/PostInfo.tsx","view/components/Post.tsx","view/containers/Post.ts","view/pages/Content.tsx","view/pages/About.tsx","view/components/Main.tsx","view/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","actions","toggleSideBarVisible","actionCreatorFactory","actionCreator","reducers","reducerWithInitialState","isVisible","case","state","actionCreators","updatePost","filterPostByTag","PostData","id","title","date","type","tags","caption","initState","post","postList","newPost","newTags","length","filter","some","pt","nt","update","filterListByTag","store","createStore","combineReducers","uiState","postState","applyMiddleware","thunk","fadeIn","keyframes","fadeOut","Wrapper","styled","div","List","ul","ListItem","li","animations","StyledLink","Link","Menu","className","to","Header","Three","divRef","React","createRef","animationID","startTime","scene","THREE","camera","renderer","shaderMaterialParams","uniforms","resolution","value","time","vertexShader","fragmentShader","material","init","divElm","setSize","clientWidth","clientHeight","handleResize","appendChild","domElement","Date","now","background","geometry","plane","add","position","z","animate","requestAnimationFrame","render","current","size","width","height","setPixelRatio","window","devicePixelRatio","this","console","error","cancelAnimationFrame","ref","target","onResize","Caption","Component","Name","h1","Title","Home","Front","Image","img","PostThumbnail","props","imageLink","toString","onClick","src","onError","withRouter","connect","appState","dispatch","postOperations","ListContainer","PostList","map","key","Object","assign","Gallery","span","Text","DeleteButton","button","Tag","name","Grid","h2","p","Tags","PostInfo","tag","split","line","i","InfoDiv","ImageDiv","Post","alt","Content","Skill","Contact","About","NotFound","Main","location","path","exact","component","App","Boolean","hostname","match","ReactDOM","Store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,0C,6ICa5BC,EATC,CACdC,qBAHoBC,KAGEC,CAAoB,2B,8NCC5C,IAIaC,EAAWC,kCAJE,CACxBC,WAAW,IAIVC,KAAKP,EAAQC,sBAAsB,SAACO,GACnC,O,yVAAO,CAAP,GACKA,EADL,CAEEF,WAAYE,EAAMF,eCNTF,EDUAA,EEdTD,EAAgBD,MAYPO,EALQ,CACrBC,WAAYP,EAAqB,kBACjCQ,gBAAiBR,EAAwB,uBCoF5BS,EAtFW,CACxB,CACEC,GAAI,GACJC,MAAO,qCACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,KAAM,gBAAiB,aAAc,OAAQ,QACpDC,QAAQ,6LAOV,CACEL,GAAI,EACJC,MAAO,iBACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,aAAc,KAAM,QAC3BC,QAAS,kEAEX,CACEL,GAAI,EACJC,MAAO,iBACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,aAAc,KAAM,QAC3BC,QAAS,kEAEX,CACEL,GAAI,EACJC,MAAO,qEACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,KAAM,gBAAiB,OAC9BC,QAAQ,gTAMV,CACEL,GAAI,EACJC,MAAO,yBACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,KAAM,iBACbC,QAAS,IAEX,CACEL,GAAI,EACJC,MAAO,6CACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,KAAM,iBACbC,QAAQ,4dAEV,CACEL,GAAI,EACJC,MAAO,iCACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,KAAM,aAAc,QAC3BC,QAAS,8JAEX,CACEL,GAAI,EACJC,MAAO,SACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,gBAAiB,kBACxBC,QAAS,oPAEX,CACEL,GAAI,EACJC,MAAO,mBACPC,KAAM,aACNC,KAAM,UACNC,KAAM,CAAC,WAAY,KAAM,aAAc,QACvCC,QAAQ,sM,yjBCjFZ,IAAMC,EAAoB,CACxBC,KAAMR,EAAS,GACfS,SAAUT,EACVK,KAAM,IAGKb,EAAWC,kCAAwBc,GAC7CZ,KAAKP,EAAQU,YAAY,SAACF,EAAec,GACxC,OAAO,KAAKd,EAAZ,CAAmBY,KAAME,OAE1Bf,KAAKP,EAAQW,iBAAiB,SAACH,EAAee,GAM7C,OAAO,KAAKf,EAAZ,CAAmBa,SALUb,EAAMS,KAAKO,OAAO,EAC7CZ,EAASa,QAAO,SAACL,GACf,OAAOA,EAAKH,KAAKS,MAAK,SAAAC,GAAE,OAAIJ,EAAQG,MAAK,SAAAE,GAAQ,OAAOD,IAAKC,WAE/DhB,OCVS,GACbiB,OAAQ7B,EAAQU,WAChBoB,gBAAiB9B,EAAQW,iBCTZP,EFqBAA,EGVA2B,EARDC,YACZC,YAA0B,CACxBC,QAASA,EACTC,UAAWf,IAEbgB,YAAgBC,M,wRCdlB,IAkBe,GACbC,OAnBaC,YAAH,KAoBVC,QAXcD,YAAH,M,q/BCLb,IAeME,EAAUC,IAAOC,IAAV,KAUPC,EAAOF,IAAOG,GAAV,KAYJC,EAAWJ,IAAOK,GAAV,IAMGC,EAAWV,QAStBW,EAAaP,YAAOQ,IAAPR,CAAH,KAUDS,EA9DQ,WACrB,OACE,gBAACV,EAAD,CAASW,UAAU,QACjB,gBAACR,EAAD,CAAMQ,UAAU,QACd,gBAACN,EAAD,CAAUM,UAAU,aAAY,gBAACH,EAAD,CAAYI,GAAG,KAAf,SAChC,gBAACP,EAAD,CAAUM,UAAU,aAAY,gBAACH,EAAD,CAAYI,GAAG,aAAf,YAChC,gBAACP,EAAD,CAAUM,UAAU,aAAY,gBAACH,EAAD,CAAYI,GAAG,WAAf,a,wMCPxC,IAQMZ,EAAUC,IAAOC,IAAV,KASEW,EAjBW,WACtB,OACE,kBAAC,EAAD,CAASF,UAAU,UACjB,kBAAC,EAAD,Q,waCHFG,G,2MACJC,OAASC,IAAMC,Y,EAEfC,YAAsB,E,EACtBC,UAAoB,E,EAEpBC,MAAqB,IAAIC,K,EAEzBC,OAAmC,IAAID,MAA0B,EAAG,EAAG,GAAI,GAAI,EAAG,G,EAClFE,SAAgC,IAAIF,K,EAEpCG,qBAAuD,CACrDC,SAAU,CACRC,WAAY,CAAEnD,KAAM,KAAMoD,MAAO,IAAIN,MACrCO,KAAM,CAAErD,KAAM,IAAKoD,MAAO,IAE5BE,aAAa,uIAKbC,eAAe,02H,EAiIjBC,SAAiC,IAAIV,KAAqB,EAAKG,sB,EAE/DQ,KAAO,SAACC,GAEN,EAAKV,SAASW,QAASD,EAAOE,YAAaF,EAAOG,cAClD,EAAKC,eACLJ,EAAOK,YAAY,EAAKf,SAASgB,YACjC,EAAKpB,UAAYqB,KAAKC,MAGtB,EAAKrB,MAAMsB,WAAa,IAAIrB,KAAY,UACxC,IAAMsB,EAAW,IAAItB,KAA2B,EAAG,GAC7CuB,EAAQ,IAAIvB,KAAYsB,EAAU,EAAKZ,UAC7C,EAAKX,MAAMyB,IAAKD,GAChB,EAAKtB,OAAOwB,SAASC,EAAI,GAET,SAAVC,IAEJ,EAAK9B,YAAc+B,sBAAuBD,GAC1C,EAAKxB,qBAAqBC,SAASG,KAAKD,OAASa,KAAKC,MAAQ,EAAKtB,WAAa,IAChF,EAAKI,SAAS2B,OAAQ,EAAK9B,MAAO,EAAKE,QAEzC0B,I,EAGFX,aAAe,WACb,GAAG,EAAKtB,OAAOoC,QAAS,CACtB,IAAMC,EAAO,CACTC,MAAO,EAAKtC,OAAOoC,QAAQhB,YAC3BmB,OAAQ,EAAKvC,OAAOoC,QAAQf,cAEhC,EAAKb,SAASgC,cAAcC,OAAOC,kBACnC,EAAKlC,SAASW,QAASkB,EAAKC,MAAOD,EAAKE,QACxC,EAAK9B,qBAAqBC,SAASC,WAAWC,MAAQ,IAAIN,KAAc+B,EAAKC,MAAOD,EAAKE,U,mFAMvFI,KAAK3C,OAAOoC,QAIhBO,KAAK1B,KAAK0B,KAAK3C,OAAOoC,SAHpBQ,QAAQC,MAAM,0B,6CAOhBC,qBAAqBH,KAAKxC,e,+BAI1B,OACE,kBAAC,GAAD,CAASP,UAAU,QAAQmD,IAAKJ,KAAK3C,QACnC,kBAAC,IAAD,CAAegD,OAAO,SAASC,SAAUN,KAAKrB,eAC9C,kBAAC4B,GAAD,KACE,wD,GA7MUjD,IAAMkD,WAoNpBlE,GAAUC,IAAOC,IAAV,MAUP+D,GAAUhE,IAAOC,IAAV,MAMEY,M,gmBCjOf,IAiBMd,GAAUC,IAAOC,IAAV,KAMEK,EAAWV,QAGpBsE,GAAOlE,IAAOmE,GAAV,MAQJC,GAAQpE,IAAOC,IAAV,MAUIoE,GA5CQ,WAQrB,OACE,gBAAC,GAAD,CAAS3D,UAAU,QACjB,gBAAC,GAAD,MACA,gBAACwD,GAAD,qBACA,gBAACE,GAAD,yBAAwB,2BAAxB,oBAA+C,2BAA/C,mB,y1BCPN,IAiBMrE,GAAUC,IAAOC,IAAV,KAKEK,EAAWV,QAGpB0E,GAAQtE,IAAOC,IAAV,MAYLmE,GAAQpE,IAAOmE,GAAV,MAYLI,GAAQvE,IAAOwE,IAAV,MAUIC,GA3DyB,SAACC,GACvC,IAAMC,EAAmC,iBAAiBD,EAAMhG,KAAKP,GAAGyG,WAAW,SACnF,OACE,gBAAC,GAAD,KACE,gBAAC,IAAD,CAAMjE,GAAG,aACP,gBAAC2D,GAAD,CAAOO,QAAS,WAAKH,EAAMG,QAAQH,EAAMhG,QACrC,gBAAC,GAAD,KAAQgG,EAAMhG,KAAKN,SAGzB,gBAACmG,GAAD,CACEO,IAAKH,EACLI,QAAS,iBCFFC,eAAWC,aAJF,SAACC,GACvB,MAAO,MAPkB,SAACC,GAC1B,MAAO,CACLN,QAAS,SAAC/G,GAAD,OAAkBqH,EAASC,EAAejG,OAAOrB,QAQpCmH,CAA6CR,K,yfCVvE,IAkBM1E,GAAUC,IAAOC,IAAV,MAMPoF,GAAgBrF,IAAOG,GAAV,MAWbC,GAAWJ,IAAOK,GAAV,MAICiF,GAvCoB,SAACZ,GAClC,OACE,gBAAC,GAAD,CAAShE,UAAU,aACjB,gBAAC2E,GAAD,CAAe3E,UAAU,kBAErBgE,EAAM/F,SAAS4G,KAAI,SAAC7G,GAClB,OACE,gBAAC,GAAD,CAAU8G,IAAK9G,EAAKP,IAClB,gBAAC,GAAD,CAAeO,KAAMA,WCJtBuG,gBALS,SAACC,GACvB,OAAOO,OAAOC,OAAO,GAAIR,EAASzF,aAHT,GAOZwF,CAA6CK,I,gSCT5D,IASMvF,GAAUC,IAAOC,IAAV,KAMEK,EAAWV,QAGpBwE,GAAQpE,IAAOmE,GAAV,MAIIwB,GAtBW,WACxB,OACE,gBAAC,GAAD,CAASjF,UAAU,WACjB,gBAAC,GAAD,gBACA,gBAAC,GAAD,Q,46CCDN,IAWMX,GAAUC,IAAO4F,KAAV,MAUPC,GAAO7F,IAAO4F,KAAV,MAKJE,GAAe9F,IAAO+F,OAAV,MAkDHC,GA5Ee,SAACtB,GAC7B,OACE,gBAAC,GAAD,CAAShE,UAAU,OACjB,gBAACmF,GAAD,KAAOnB,EAAMuB,MAEE,cAAbvB,EAAMpG,MAAsB,gBAACwH,GAAD,Q,+yBCFpC,IA6BM/F,GAAUC,IAAOC,IAAV,MAMPiG,GAAOlG,IAAOC,IAAV,MAUJmE,GAAQpE,IAAOmG,GAAV,MAIL5D,GAAOvC,IAAOoG,EAAV,MAIJC,GAAOrG,IAAOC,IAAV,MAMJ+D,GAAUhE,IAAOC,IAAV,MAKEqG,GAhEoB,SAAC5B,GAClC,OACE,gBAAC,GAAD,CAAShE,UAAU,aACjB,gBAACwF,GAAD,CAAMxF,UAAU,QACd,gBAAC,GAAD,KAAQgE,EAAMtG,OACd,gBAAC,GAAD,KAAOsG,EAAMrG,MACb,gBAACgI,GAAD,KAEE3B,EAAMnG,KAAKgH,KAAI,SAACgB,GACd,OAAO,gBAAC,GAAD,CACLf,IAAK,QAAQe,EACbN,KAAMM,EACNjI,KAAM,QACNiI,EAJK,SAQX,gBAAC,GAAD,KAEE7B,EAAMlG,QAAQgI,MAAM,MAAMjB,KAAI,SAACkB,EAAMC,GACnC,OAAO,qBAAGlB,IAAKiB,GAAOA,U,4kBCxBlC,IAuBM1G,GAAUC,IAAOC,IAAV,MASP0G,GAAU3G,IAAOC,IAAV,MAIP2G,GAAW5G,IAAOC,IAAV,MAKRsE,GAAQvE,IAAOwE,IAAV,MAMIqC,GA/CgB,SAACnC,GAC2BA,EAAMvG,GAAGyG,WAAlE,IACMD,EAAmC,iBAAiBD,EAAMvG,GAAGyG,WAAW,SAC9E,OACE,gBAAC,GAAD,CAASlE,UAAU,QACjB,gBAACiG,GAAD,CAASjG,UAAU,iBACjB,gBAAC,GAAD,CACEtC,MAAOsG,EAAMtG,MACbC,KAAMqG,EAAMrG,KACZE,KAAMmG,EAAMnG,KACZC,QAASkG,EAAMlG,WAGnB,gBAACoI,GAAD,CAAUlG,UAAU,kBAClB,gBAAC,GAAD,CAAOA,UAAU,aACfoE,IAAKH,EACLmC,IAAKpC,EAAMtG,WCbN6G,gBAHS,SAACC,GACvB,OAAOO,OAAOC,OAAO,GAAIR,EAASzF,UAAUf,SAJnB,WACzB,MAAO,KAKMuG,CAA6C4B,I,8LCL5D,IAQM9G,GAAUC,IAAOC,IAAV,KAMEK,EAAWV,QAGXmH,GAjBW,WACxB,OACE,gBAAC,GAAD,CAASrG,UAAU,WACjB,gBAAC,GAAD,Q,msBCLN,IAgCMX,GAAUC,IAAOC,IAAV,KAMEK,EAAWV,QASpBwE,GAAQpE,IAAOmE,GAAV,MAKLD,GAAOlE,IAAOC,IAAV,MAUJ+G,GAAQhH,IAAOC,IAAV,MAILgH,GAAUjH,IAAOC,IAAV,MAMEiH,GAxEU,WACrB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,cACA,kBAAC,GAAD,CAAMxG,UAAU,cACd,8CACA,yEACA,gGAEF,kBAACsG,GAAD,CAAOtG,UAAU,eACf,uCACA,mDACA,+EACA,oDACA,kDACA,4CACA,iEACA,yCACA,sCACA,qFAEF,kBAACuG,GAAD,KACE,yCACA,8DACA,oEACA,0D,wJCrBV,IAAME,GAAqB,WACzB,OAAQ,oDAqBJpH,GAAUC,IAAOC,IAAV,MAQEmH,GA1BS,WACpB,OACE,kBAAC,GAAD,CAAS1G,UAAU,QACjB,kBAAC,IAAD,CAAOuC,OAAQ,SAAAyB,GACb,OACE,kBAAC,IAAD,CAAQ2C,SAAU3C,EAAM2C,UACtB,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnD,KACjC,kBAAC,IAAD,CAAOiD,KAAK,YAAYC,OAAK,EAACC,UAAW7B,KACzC,kBAAC,IAAD,CAAO2B,KAAK,YAAYC,OAAK,EAACC,UAAWT,KACzC,kBAAC,IAAD,CAAOO,KAAK,UAAUC,OAAK,EAACC,UAAWN,KACvC,kBAAC,IAAD,CAAOM,UAAWL,W,0LCjBhC,IASMpH,GAAUC,IAAOC,IAAV,MASEwH,GAlBO,WACpB,OACE,kBAAC,GAAD,CAAS/G,UAAU,OACjB,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,MCEcgH,QACW,cAA7BnE,OAAO8D,SAASM,UAEe,UAA7BpE,OAAO8D,SAASM,UAEhBpE,OAAO8D,SAASM,SAASC,MACvB,2D,MCLNC,IAAS5E,OACP,kBAAC,IAAD,CAAU5D,MAAOyI,GACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d2845c4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/URWDIN-Light.e2fa61ec.otf\";","import actionCreatorFactory, { ActionCreator } from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\nconst actions = {\r\n  toggleSideBarVisible: actionCreator<void>('TOGGLE_SIDEBAR_VISIBLE'),\r\n};\r\n\r\nexport interface IActions {\r\n  toggleSideBarVisible: ActionCreator<void>;\r\n};\r\n\r\n// export type IActions = typeof actions;\r\nexport default actions;\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport actions from './actions';\r\n\r\nexport interface IState {\r\n  isVisible: boolean;\r\n};\r\nconst initState: IState = {\r\n  isVisible: false,\r\n};\r\n\r\nexport const reducers = reducerWithInitialState(initState)\r\n  .case(actions.toggleSideBarVisible, (state) => {\r\n    return {\r\n      ...state,\r\n      isVisible: !state.isVisible,\r\n    };\r\n  });\r\n\r\nexport default reducers;\r\n","import reducers from './reducers';\r\nimport { IActions as BaseActions } from './actions';\r\nimport { IState as BaseState } from './reducers';\r\n\r\nexport { default as selectors } from './selectors';\r\nexport { default as operations } from './operations';\r\nexport interface IActions extends BaseActions {};\r\nexport interface IState extends BaseState {};\r\nexport default reducers;\r\n","import actionCreatorFactory, { Action } from 'typescript-fsa';\r\n\r\nimport { IPost } from '../../assets/PostData';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\nexport interface IActions {\r\n  updatePost: Action<IPost>;\r\n  filterPostListByTag: Action<string[]>\r\n};\r\n\r\nconst actionCreators = {\r\n  updatePost: actionCreator<IPost>('UPDATE_CONTENT'),\r\n  filterPostByTag: actionCreator<string[]>('FILTER_POST_BY_TAG'),\r\n}\r\n\r\nexport default actionCreators;\r\n","export type IPostType = 'project' | 'article' | 'graphic';\r\n\r\nexport interface IPost {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  type: IPostType;// 'project', 'article', 'graphic'\r\n  tags: string[];\r\n  caption: string;\r\n}\r\n\r\nconst PostData: IPost[] = [\r\n  {\r\n    id: 13,\r\n    title: 'NxPC.Live vol.35　IAMAS×SFC',\r\n    date: '2019/03/16',\r\n    type: 'project',\r\n    tags: ['VJ', 'TouchDesigner', 'LiveCoding', 'GLSL', 'VEDA'],\r\n    caption: `SFCとコラボした2019年度末のNxPC.LiveにVJとして出演。\r\n    <sound>\r\n    mrt)ry\r\n    f&u&leico\r\n    naoqi ishizuq\r\n    `,\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Algorave Tokyo',\r\n    date: '2018/11/18',\r\n    type: 'project',\r\n    tags: ['LiveCoding', 'VJ', 'VEDA'],\r\n    caption: 'ライブコーディングVJ。',\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Algorave Osaka',\r\n    date: '2018/11/10',\r\n    type: 'project',\r\n    tags: ['LiveCoding', 'VJ', 'VEDA'],\r\n    caption: 'ライブコーディングVJ。',\r\n  },\r\n  {\r\n    id: 6,\r\n    title: '養老アート・ピクニック',\r\n    date: '2018/11/03',\r\n    type: 'project',\r\n    tags: ['VJ', 'TouchDesigner', 'LED'],\r\n    caption: `養老天命反転地に隣接する岐阜県養老公園にて行われたイベント。VJとして出演。\r\n    <sound>\r\n    メゾネットメゾン\r\n    f&u\r\n    `,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'InterimReport edition3',\r\n    date: '2018/09/02',\r\n    type: 'project',\r\n    tags: ['VJ', 'TouchDesigner'],\r\n    caption: '',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '沖縄路上ライブ',\r\n    date: '2018/08/18',\r\n    type: 'project',\r\n    tags: ['VJ', 'TouchDesigner'],\r\n    caption: `沖縄の野外路上にて、IAMASの生楽器・電子音楽ユニットf&uのVJを行った。複数台のピコプロジェクターで演者の前の地面に映像を投影し、路上ライブにおける映像演出を実現した。`,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'NxPC.Live vol.32 OPENHOUSE2018',\r\n    date: '2018/08/04',\r\n    type: 'project',\r\n    tags: ['VJ', 'LiveCoding', 'VEDA'],\r\n    caption: 'IAMASの生楽器・電子音楽ユニットf&uのライブコーディングVJ。',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'EXTEND',\r\n    date: '2018/07/13',\r\n    type: 'project',\r\n    tags: ['Live Painting', 'openFrameworks'],\r\n    caption: 'モーショントラッキングを用いたライブペインティングの演出システム及び映像を制作。',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'NxPC.Live vol.31',\r\n    date: '2018/03/20',\r\n    type: 'project',\r\n    tags: ['NxPC.Lab', 'VJ', 'LiveCoding', 'VEDA'],\r\n    caption: `NxPC.Labが毎年3月に開催するNxPC.LiveにライブコーディングVJで出演。\r\n    <sound>\r\n    mitsuhiro hibino`,\r\n  },\r\n];\r\n\r\nexport default PostData;\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport actions from './actions';\r\n\r\nimport PostData, { IPost } from '../../assets/PostData';\r\n\r\nexport interface IState {\r\n  post: IPost,\r\n  postList: IPost[],\r\n  tags: string[],\r\n};\r\nconst initState: IState = {\r\n  post: PostData[0],\r\n  postList: PostData,\r\n  tags: [],\r\n};\r\n\r\nexport const reducers = reducerWithInitialState(initState)\r\n  .case(actions.updatePost, (state: IState, newPost: IPost)=> {\r\n    return { ...state, post: newPost };\r\n  })\r\n  .case(actions.filterPostByTag, (state: IState, newTags: string[])=> {\r\n    const newPostList: IPost[] = state.tags.length>0 ?\r\n      PostData.filter((post:IPost) => {\r\n        return post.tags.some(pt => newTags.some(nt => { return pt===nt }))\r\n      }):\r\n      PostData;\r\n    return { ...state, postList: newPostList };\r\n  });\r\n\r\nexport default reducers;\r\n","// import { Dispatch } from 'redux';\r\n// import { Action } from 'typescript-fsa';\r\nimport actions from './actions';\r\n\r\n// import { IPost } from '../../assets/PostData';\r\n\r\n// const update = actions.updatePost;\r\n// const update = (newPost: IPost) => (dispatch: Dispatch) => {\r\n//   return dispatch(actions.updatePost(newPost));\r\n// }\r\n\r\n// const filterListByTag = (newTags: string[]) => (dispatch: Dispatch) => {\r\n//   return dispatch(actions.filterPostByTag(newTags));\r\n// }\r\n\r\nexport default {\r\n  update: actions.updatePost,\r\n  filterListByTag: actions.filterPostByTag,\r\n};\r\n","import reducers from './reducers';\r\nimport { IActions as BaseActions } from './actions';\r\nimport { IState as BaseState } from './reducers';\r\n\r\nexport { default as selectors } from './selectors';\r\nexport { default as operations } from './operations';\r\nexport interface IActions extends BaseActions {};\r\nexport interface IState extends BaseState {};\r\nexport default reducers;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport * as uiState from './uiState';\r\nimport * as post from './post';\r\n\r\n\r\nexport type AppState = {\r\n  uiState: uiState.IState,\r\n  postState: post.IState,\r\n};\r\n\r\nconst store = createStore(\r\n  combineReducers<AppState>({\r\n    uiState: uiState.default,\r\n    postState: post.default,\r\n  }),\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import { keyframes } from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst fadeOut = keyframes`\r\n  from {\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport default {\r\n  fadeIn,\r\n  fadeOut,\r\n};\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport animations from '../animations';\r\n\r\nconst Menu: React.FC = () => {\r\n  return (\r\n    <Wrapper className=\"menu\">\r\n      <List className=\"list\">\r\n        <ListItem className=\"list-item\"><StyledLink to=\"/\">Home</StyledLink></ListItem>\r\n        <ListItem className=\"list-item\"><StyledLink to=\"/gallery/\">Gallery</StyledLink></ListItem>\r\n        <ListItem className=\"list-item\"><StyledLink to=\"/about/\">About</StyledLink></ListItem>\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\n// interface IList {\r\n//   isVisible: boolean;\r\n// };\r\nconst Wrapper = styled.div`\r\n  width: 360px;\r\n  height: 64px;\r\n  background-color: white;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin: auto 0 auto auto;\r\n`;\r\nconst List = styled.ul`\r\n  width: 100%;\r\n  height: 48px;\r\n  list-style: none;\r\n  font-size: 30px;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n  -webkit-justify-content: flex-end;\r\n  justify-content: flex-end;\r\n  -webkit-align-items: flex-end;\r\n  align-items: flex-end;\r\n`;\r\nconst ListItem = styled.li`\r\n  color: #AAA;\r\n  width: 120px;\r\n  text-align: center;\r\n  &:hover {\r\n    color: #F00;\r\n    animation: ${animations.fadeIn} 0.5s 0s ease;\r\n  }\r\n  &:visited {\r\n    color: #DDD\r\n  }\r\n  &:link {\r\n    color: #DDD\r\n  }\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  &:visited {\r\n    color: #000;\r\n  }\r\n  &:hover {\r\n    color: #F00;\r\n  }\r\n`;\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Menu from './Menu';\r\n\r\nconst Header : React.FC = () => {\r\n    return (\r\n      <Wrapper className=\"header\">\r\n        <Menu />\r\n      </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 90%;\r\n  height: 64px;\r\n  margin: auto;\r\n  background-color: rgba(1, 1, 1, 0);\r\n  position: relative;\r\n  z-index: 1000;\r\n`;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport EventListener from 'react-event-listener';\r\nimport styled from 'styled-components';\r\nimport * as THREE from 'three';\r\n\r\nclass Three extends React.Component {\r\n  divRef = React.createRef<HTMLDivElement>();\r\n\r\n  animationID: number = 0;\r\n  startTime: number = 0.;\r\n\r\n  scene: THREE.Scene = new THREE.Scene();\r\n  // camera: THREE.PerspectiveCamera =  new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 10 );\r\n  camera: THREE.OrthographicCamera = new THREE.OrthographicCamera(-1, 1, 1, -1, -1, 1);\r\n  renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer();\r\n\r\n  shaderMaterialParams: THREE.ShaderMaterialParameters = {\r\n    uniforms: {\r\n      resolution: { type: 'v2', value: new THREE.Vector2() },\r\n      time: { type: 'f', value: 0. }\r\n    },\r\n    vertexShader: `precision highp float;\r\n    void main() {\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\r\n    }\r\n    `,\r\n    fragmentShader: `precision highp float;\r\n\r\n    uniform float time;\r\n    uniform vec2 resolution;\r\n\r\n    float noise(in float t) { return sin(t+sin(t*1.1+sin(t*1.2))); }\r\n\r\n    mat2 rotate(in float r) { float c=cos(r),s=sin(r); return mat2(c, s, -s, c); }\r\n\r\n    // vec2 cmul(in vec2 a, in vec2 b) { return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x); }\r\n    vec2 csqr(in vec2 a) { return vec2(a.x*a.x - a.y*a.y, 2.0*a.x*a.y); }\r\n\r\n    // distance function\r\n    float sphere(in vec3 p, in float r) { return length(p) - r; }\r\n    float box(in vec3 p, in vec3 b) { vec3 d=abs(p)-b; return length(max(d, 0.))+min(max(d.x,max(d.y,d.z)),0.); }\r\n    float torus(in vec3 p, in vec2 t) { vec2 q=vec2(length(p.xy)-t.x, p.z); return length(q)-t.y; }\r\n\r\n    // get geometry\r\n    float geometry(in vec3 p, in vec2 t) {\r\n      float obj1 = sphere(p, 0.4);\r\n      float obj2 = box(p, vec3(0.3));\r\n      float obj3 = torus(p, vec2(0.35, 0.125));\r\n\r\n      float res =\r\n        t.x<1. ? mix(obj1, obj2, smoothstep(0.8, 1., t.y)) :\r\n        t.x<2. ? mix(obj2, obj3, smoothstep(0.8, 1., t.y)) :\r\n                 mix(obj3, obj1, smoothstep(0.8, 1., t.y));\r\n      return res;\r\n    }\r\n\r\n    // pattern in geometry\r\n    float map(in vec3 p) {\r\n      float res = 0.;\r\n      vec3 c = p;\r\n      for (int i = 0; i < 10; ++i) {\r\n            p =.7*abs(p)/dot(p,p) -.8;\r\n            p.yz= csqr(p.yz);\r\n            p=p.zxy;\r\n            res += exp(-29. * abs(dot(p,c)));\r\n      }\r\n      return res/2.;\r\n    }\r\n\r\n    // ray march to get geometry\r\n    vec2 getTMinMax(in vec3 ro, in vec3 rd, in vec2 cminmax) {\r\n        vec2 res = vec2(-1.);\r\n        float thr = 0.001;\r\n\r\n        float geoT = mod(0.2*time, 3.);\r\n        vec2 geoT2 = vec2(floor(geoT), fract(geoT));\r\n\r\n        // calc tmin\r\n        float t = cminmax.x;\r\n        for(int i=0;i<128;i++) {\r\n          float tmp = geometry(ro + rd*t, geoT2);\r\n            tmp = max(tmp, 0.);\r\n            if(tmp<thr || cminmax.y<t) {\r\n                break;\r\n            }\r\n            t += tmp*0.5;\r\n        }\r\n        if(cminmax.y<t) return vec2(-1.);\r\n        res.x = t;\r\n\r\n        // calc tmax\r\n        //t += 4.*thr;\r\n        t += 0.05;\r\n        for(int i=0;i<128;i++) {\r\n            float tmp = geometry(ro + rd*t, geoT2);\r\n            tmp *= -1.;\r\n            if(tmp<thr || cminmax.y<t) {\r\n                break;\r\n            }\r\n            t += tmp*0.5;\r\n        }\r\n        res.y = cminmax.y<t ? cminmax.y : t;\r\n        return res;\r\n    }\r\n\r\n    //\r\n    vec3 rayMarch(in vec3 ro, in vec3 rd, in vec2 tminmax) {\r\n        vec3 col = vec3(0.);\r\n\r\n        float t = tminmax.x;\r\n        float dt = (tminmax.y-tminmax.x) / 64.;\r\n        //dt = 0.02;\r\n        for(int i=0;i<16;i++) {\r\n            // march t\r\n            t += dt;\r\n            if(tminmax.y<t) break;\r\n            float c = map(ro + rd*t);\r\n            col = 0.99*col + 0.02*vec3(c*c);\r\n        }\r\n        // col = mix(vec3(0.0, 0.3, 0.5), vec3(1.), col);\r\n        return col;\r\n    }\r\n\r\n    void main()\r\n    {\r\n        vec2 uv = gl_FragCoord.xy/resolution.xy;\r\n        vec2 p = (gl_FragCoord.xy*2. - resolution.xy) / min(resolution.x, resolution.y);\r\n\r\n        // camera\r\n        float cl = 1.1+0.1*sin(0.27*time);\r\n        vec3 ro = cl*vec3(cos(0.3*time), 0., sin(0.3*time));\r\n        vec3 ta = vec3(0., 0., 0.);\r\n        float cr = 0.3*sin(0.1*time);\r\n        vec3 cz = normalize(ta-ro);\r\n        vec3 cx = normalize(cross(cz, vec3(sin(cr), cos(cr), 0.)));\r\n        vec3 cy = normalize(cross(cx, cz));\r\n        vec3 rd = normalize(mat3(cx, cy, cz) * vec3(p+0.1*vec2(noise(0.9*time), noise(0.8*time)), 2.));\r\n\r\n        // get tmin, tmax\r\n        vec2 tmm = getTMinMax(ro, rd, vec2(0., 10.));\r\n\r\n        // render\r\n        vec3 col = vec3(0.);\r\n        if(tmm.x<0.){\r\n          col = vec3(1.);\r\n        } else {\r\n          col = rayMarch(ro, rd, tmm);\r\n          col += 0.5*vec3(tmm.y-tmm.x);\r\n        }\r\n\r\n        // Output to screen\r\n        gl_FragColor = vec4(col,1.0);\r\n    }`\r\n  };\r\n\r\n  material: THREE.ShaderMaterial = new THREE.ShaderMaterial(this.shaderMaterialParams);\r\n\r\n  init = (divElm: HTMLDivElement) => {\r\n    // init renderer\r\n    this.renderer.setSize( divElm.clientWidth, divElm.clientHeight );\r\n    this.handleResize();\r\n    divElm.appendChild(this.renderer.domElement);\r\n    this.startTime = Date.now();\r\n\r\n    // create scene\r\n    this.scene.background = new THREE.Color(0xffffff);\r\n    const geometry = new THREE.PlaneBufferGeometry( 2, 2 );\r\n    const plane = new THREE.Mesh( geometry, this.material );\r\n    this.scene.add( plane );\r\n    this.camera.position.z = 1;\r\n\r\n    const animate = () => {\r\n      // console.log('animate.');\r\n      this.animationID = requestAnimationFrame( animate );\r\n      this.shaderMaterialParams.uniforms.time.value = (Date.now() - this.startTime) / 1000;\r\n      this.renderer.render( this.scene, this.camera );\r\n    };\r\n    animate();\r\n  }\r\n\r\n  handleResize = () => {\r\n    if(this.divRef.current) {\r\n      const size = {\r\n          width: this.divRef.current.clientWidth,\r\n          height: this.divRef.current.clientHeight\r\n        };\r\n      this.renderer.setPixelRatio(window.devicePixelRatio);\r\n      this.renderer.setSize( size.width, size.height );\r\n      this.shaderMaterialParams.uniforms.resolution.value = new THREE.Vector2(size.width, size.height);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log('did mount.');\r\n    if(!this.divRef.current) {\r\n      console.error('this.divRef is null.');\r\n      return;\r\n    }\r\n    this.init(this.divRef.current);\r\n  }\r\n  componentWillUnmount() {\r\n    // console.log('will unmount.');\r\n    cancelAnimationFrame(this.animationID);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper className=\"three\" ref={this.divRef}>\r\n        <EventListener target=\"window\" onResize={this.handleResize} />\r\n        <Caption>\r\n          <h1>2019/09/23 - jewel</h1>\r\n        </Caption>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: auto;\r\n  width: 100%;\r\n  height: 99%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n`;\r\n\r\nconst Caption = styled.div`\r\n  position: absolute;\r\n  bottom: 32px;\r\n  right: 0;\r\n`;\r\n\r\nexport default Three;\r\n","import * as React from 'react';\r\n// import YouTube from 'react-youtube';\r\nimport styled from 'styled-components';\r\n\r\nimport animations from '../animations';\r\n\r\nimport Three from '../components/Three';\r\n\r\nconst Home: React.FC = () => {\r\n  // const opts = {\r\n  //   height: '390',\r\n  //   width: '640',\r\n  //   playerVars: {\r\n  //     autoplay: 1\r\n  //   }\r\n  // };\r\n  return (\r\n    <Wrapper className=\"Home\">\r\n      <Three />\r\n      <Name>Kohei Nakada</Name>\r\n      <Title>Visual Programmer<br />Visual Live Coder<br />Visual Jockey</Title>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: auto;\r\n  width: 90%;\r\n  height: 100%;\r\n  position: relative;\r\n  opacity: 1;\r\n  animation: ${animations.fadeIn} 1s 0s ease;\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  margin: 0;\r\n  padding: 64px 0 0 0;\r\n  position: relative;\r\n  z-index: 1;\r\n  font-family: 'URWDIN-Black';\r\n  font-size: 64px;\r\n`;\r\nconst Title = styled.div`\r\n  margin: 0;\r\n  // padding: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n  font-family: 'URWDIN-Light';\r\n  font-size: 28px;\r\n  line-height: 36px;\r\n`;\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport animations from '../animations';\r\n\r\nimport { IPost } from '../../assets/PostData';\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  post: IPost,\r\n  onClick: (post: IPost) => any\r\n}\r\n\r\nconst PostThumbnail: React.FC<IProps> = (props: IProps) => {\r\n  const imageLink = process.env.PUBLIC_URL+'/assets/posts/'+props.post.id.toString()+'/1.png';\r\n  return (\r\n    <Wrapper>\r\n      <Link to='/content/'>\r\n        <Front onClick={()=>{props.onClick(props.post)}}>\r\n            <Title>{props.post.title}</Title>\r\n        </Front>\r\n      </Link>\r\n      <Image\r\n        src={imageLink}\r\n        onError={()=>{}}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  opacity: 1;\r\n  animation: ${animations.fadeIn} 1s 0s ease;\r\n`;\r\n\r\nconst Front = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  opacity: 0;\r\n  transition: opacity 0.25s;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  z-index: 20;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%);\r\n  color: #222;\r\n  text-align: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10;\r\n  object-fit: cover;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default PostThumbnail;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Dispatch } from 'redux';\r\nimport { Action } from 'typescript-fsa';\r\n\r\nimport { AppState } from '../../state/store';\r\nimport { operations as postOperations } from '../../state/post';\r\n\r\nimport PostThumbnail from '../components/PostThumbnail';\r\n\r\nimport { IPost } from '../../assets/PostData';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<IPost>>) => {\r\n  return {\r\n    onClick: (state: IPost) => dispatch(postOperations.update(state))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (appState: AppState) => {\r\n  return {}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostThumbnail));\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n// import { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { IPost } from '../../assets/PostData';\r\n\r\nimport PostThumbnail from '../containers/PostThumbnail';\r\n\r\ninterface IProps {\r\n  postList: IPost[],\r\n}\r\n\r\nconst PostList: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <Wrapper className=\"post-list\">\r\n      <ListContainer className=\"list-container\">\r\n        {\r\n          props.postList.map((post)=>{\r\n            return (\r\n              <ListItem key={post.id}>\r\n                <PostThumbnail post={post} />\r\n              </ListItem>\r\n            );\r\n          })\r\n        }\r\n      </ListContainer>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst ListContainer = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  padding: 0;\r\n  display: grid;\r\n  gap: 50px;\r\n  grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));\r\n  grid-template-rows: repeat(auto-fit, 270px);\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n`;\r\n\r\nexport default PostList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/store';\r\n// import { operations as postOperations } from '../../state/post';\r\n\r\nimport PostList from '../components/PostList';\r\n\r\n// import { IPost } from '../../assets/PostData';\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst mapStateToProps = (appState: AppState) => {\r\n  return Object.assign({}, appState.postState);\r\n  // return appState.postState.postList;\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport animations from '../animations';\r\n\r\nimport PostList from '../containers/PostList';\r\n\r\nconst Gallery: React.FC = () => {\r\n  return (\r\n    <Wrapper className=\"gallery\">\r\n      <Title>Gallery</Title>\r\n      <PostList />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 64px auto;\r\n  width: 90%;\r\n  height: 100%;\r\n  position: relative;\r\n  opacity: 1;\r\n  animation: ${animations.fadeIn} 1s 0s ease;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n`;\r\n\r\nexport default Gallery;\r\n\r\n\r\n// import SearchBar from '../components/SearchBar';\r\n\r\n// const [menuVisible, setMenuVisible] = React.useState(false);\r\n\r\n// import Menu from '../components/Menu';\r\n// import MenuIcon from '../components/MenuIcon';\r\n// <MenuIcon onClick={()=>setMenuVisible(!menuVisible)} isVisible={menuVisible}></MenuIcon>\r\n// <Menu isVisible={menuVisible}></Menu>\r\n\r\n// <Page className=\"page\">\r\n// </Page>\r\n\r\n// <SearchBar tags={['hello', 'world']}></SearchBar>\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype ITagType = 'searchBar' | 'post';\r\n\r\ntype IProps = {\r\n  name: string;\r\n  type: ITagType;\r\n}\r\n\r\nconst Tag: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <Wrapper className=\"tag\">\r\n      <Text>{props.name}</Text>\r\n      {\r\n        props.type==='searchBar' && <DeleteButton />\r\n      }\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.span`\r\n  margin: 0px 4px;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  border: 1px solid #DDD;\r\n  border-radius: 2px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: #666;\r\n  height: 100%;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: #FFF;\r\n  width:  16px;\r\n  height: 16px;\r\n  margin: 0px 0px 0px 4px;\r\n  padding: 0px;\r\n  position: relative;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  border-radius: 8px;\r\n  border: 1px solid #DDD;\r\n  outline: 0px;\r\n  &:before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n\t\twidth: 1px;\r\n\t\theight: 10px;\r\n\t\tborder: 0;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: #444;\r\n\t\t-moz-transform:rotate(45deg);\r\n\t\t-webkit-transform:rotate(45deg);\r\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n\t\twidth: 1px;\r\n\t\theight: 10px;\r\n\t\tborder: 0;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: #444;\r\n\t\t-moz-transform:rotate(-45deg);\r\n\t\t-webkit-transform:rotate(-45deg);\r\n\t\ttransform: translateX(-50%) translateY(-50%) rotate(-45deg);\r\n  }\r\n  &:active {\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nexport default Tag;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// import { IPost } from '../../assets/PostData';\r\nimport Tag from './Tag';\r\n\r\ntype IProps = {\r\n  title: string,\r\n  date: string,\r\n  tags: string[],\r\n  caption: string,\r\n}\r\n\r\nconst PostInfo: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <Wrapper className=\"post-info\">\r\n      <Grid className=\"grid\">\r\n        <Title>{props.title}</Title>\r\n        <Date>{props.date}</Date>\r\n        <Tags>\r\n        {\r\n          props.tags.map((tag) => {\r\n            return <Tag\r\n              key={'tags-'+tag}\r\n              name={tag}\r\n              type={'post'}\r\n            >{tag} </Tag>\r\n          })\r\n        }\r\n        </Tags>\r\n        <Caption>\r\n        {\r\n          props.caption.split('\\n').map((line, i) => {\r\n            return <p key={line}>{line}</p>\r\n          })\r\n        }\r\n        </Caption>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr 3fr;\r\n  grid-template-columns: 1fr 6fr 1fr;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  grid-row: 1;\r\n  grid-column: 2;\r\n`;\r\nconst Date = styled.p`\r\n  grid-row: 2;\r\n  grid-column: 2;\r\n`;\r\nconst Tags = styled.div`\r\n  grid-row: 3;\r\n  grid-column: 2;\r\n`;\r\n// const Tag = styled.button`\r\n// `;\r\nconst Caption = styled.div`\r\n  grid-row: 4;\r\n  grid-column: 2;\r\n`;\r\n\r\nexport default PostInfo;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport PostInfo from './PostInfo';\r\n\r\nimport { IPost } from '../../assets/PostData';\r\n\r\ntype IProps = IPost;\r\n\r\nconst Post: React.FC<IProps> = (props: IProps) => {\r\n  const imageDir = process.env.PUBLIC_URL+'/assets/posts/'+props.id.toString()+'/';\r\n  const imageLink = process.env.PUBLIC_URL+'/assets/posts/'+props.id.toString()+'/1.png'\r\n  return (\r\n    <Wrapper className=\"post\">\r\n      <InfoDiv className=\"post-info-div\">\r\n        <PostInfo\r\n          title={props.title}\r\n          date={props.date}\r\n          tags={props.tags}\r\n          caption={props.caption}\r\n        />\r\n      </InfoDiv>\r\n      <ImageDiv className=\"post-image-div\">\r\n        <Image className=\"post-image\"\r\n          src={imageLink}\r\n          alt={props.title}\r\n        />\r\n      </ImageDiv>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));\r\n`;\r\n\r\nconst InfoDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ImageDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  line-height: 0;\r\n`;\r\nconst Image = styled.img`\r\n  width: 90%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n`;\r\n\r\nexport default Post;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/store';\r\n\r\nimport Post from '../components/Post';\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {};\r\n}\r\nconst mapStateToProps = (appState: AppState) => {\r\n  return Object.assign({}, appState.postState.post);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport animations from '../animations';\r\n\r\nimport Post from '../containers/Post';\r\n\r\nconst Content: React.FC = () => {\r\n  return (\r\n    <Wrapper className=\"content\">\r\n      <Post />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: auto;\r\n  width: 90%;\r\n  height: 100%;\r\n  position: relative;\r\n  opacity: 1;\r\n  animation: ${animations.fadeIn} 1s 0s ease;\r\n`;\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport animations from '../animations';\r\n\r\nconst About : React.FC = () => {\r\n    return (\r\n      <Wrapper>\r\n        <Title>About</Title>\r\n        <Name className=\"about-name\">\r\n          <h2>- Kohei Nakada</h2>\r\n          <p>visual programmer / visual live coder / VJ</p>\r\n          <p>Student of Institute of Advanced Media Arts and Scienses(IAMAS).</p>\r\n        </Name>\r\n        <Skill className=\"about-skill\">\r\n          <h2>- Skill</h2>\r\n          <h3>Real-time Rendering</h3>\r\n          <p>TouchDesigner, Unity, openFrameworks, Processing</p>\r\n          <h3>Programming Language</h3>\r\n          <p>GLSL, C/C++, Python</p>\r\n          <h3>Web Frontend</h3>\r\n          <p>Three.js, React, Redux, Typescript</p>\r\n          <h3>DCC Tools</h3>\r\n          <p>Blender</p>\r\n          <p>Adobe Photoshop/Illustrator/AfterEffects/PremierePro/</p>\r\n        </Skill>\r\n        <Contact>\r\n          <h2>- Contact</h2>\r\n          <p>e-mail  ... ankd.2653@gmail.com</p>\r\n          <p>github  ... https://github.com/ankd-k</p>\r\n          <p>twitter ... @koheinakada</p>\r\n\r\n        </Contact>\r\n      </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 64px auto;\r\n  width: 90%;\r\n  //height: 100%;\r\n  position: relative;\r\n  opacity: 1;\r\n  animation: ${animations.fadeIn} 1s 0s ease;\r\n  & h2 {\r\n    margin: 20px 0;\r\n  }\r\n  & h3 {\r\n    margin: 12px 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 28px 0px;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  width: 100%;\r\n  margin: 10px 0;\r\n`;\r\n// <Statement className=\"about-statement\">\r\n// </Statement>\r\n// const Statement = styled.div`\r\n//   width: 100%;\r\n//   margin: 12px 0;\r\n// `;\r\nconst Skill = styled.div`\r\n  width: 100%;\r\n  margin: 36px 0;\r\n`;\r\nconst Contact = styled.div`\r\n  width: 100%;\r\n  margin: 36px 0;\r\n`;\r\n\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Home from '../pages/Home';\r\nimport Gallery from '../pages/Gallery';\r\nimport Content from '../pages/Content';\r\nimport About from '../pages/About';\r\n\r\nconst NotFound: React.FC = () => {\r\n  return (<h2>404 Page not found.</h2>);\r\n}\r\n\r\nconst Main : React.FC = () => {\r\n    return (\r\n      <Wrapper className=\"main\">\r\n        <Route render={props => {\r\n          return (\r\n            <Switch location={props.location}>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/gallery/\" exact component={Gallery} />\r\n              <Route path=\"/content/\" exact component={Content} />\r\n              <Route path=\"/about/\" exact component={About} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          )\r\n        }} />\r\n      </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nconst App: React.FC = () => {\n  return (\n    <Wrapper className=\"App\">\n      <Header />\n      <Main />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: #222;\n  background: #FFF;\n  width: 100%;\n  height: 100%;\n  // margin: auto;\n  position: relative;\n`;\n\nexport default App;\n\n\n// import * as uiState from '../state/uiState';\n//\n// import animations from './animations';\n\n// <BrowserRouter>\n//   <Route render={(props)=> {\n//     return (\n//       <TransitionGroup component={null}>\n//         <CSSTransition\n//           in={true}\n//           classNames=\"page\"\n//           timeout={1000}\n//           key={props.location.key}\n//           appear={true}\n//         >\n//           <Switch location={props.location}>\n//             <Route path=\"/\" exact component={Home} />\n//             <Route path=\"/gallery/\" exact component={Gallery} />\n//             <Route path=\"/content/\" exact component={Content} />\n//             <Route component={NotFound} />\n//           </Switch>\n//         </CSSTransition>\n//       </TransitionGroup>\n//     );\n//   }}/>\n// </BrowserRouter>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Store from './state/store';\nimport App from './view/App';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/fonts/URWDIN/URWDIN-Light.otf';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}